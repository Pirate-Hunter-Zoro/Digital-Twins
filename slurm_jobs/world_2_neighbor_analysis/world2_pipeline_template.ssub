#!/bin/bash
#SBATCH --partition=c3_accel
#SBATCH --time=7-00:00:00
#SBATCH --mem=80G
# Note: --gres and --cpus-per-task are passed by the launcher!

# --- Safety First! ---
trap "echo '๐ SIGTERM received, killing vLLM Server...'; kill \$VLLM_PID 2>/dev/null" SIGTERM

# --- Activate Environment ---
echo "โ Activating Conda environment..."
source /opt/apps/easybuild/software/Anaconda3/2022.05/etc/profile.d/conda.sh
conda activate dt_env
set -e

# ==============================================================================
# === โ๏ธ STEP 1: VECTORIZE THE PATIENTS โ๏ธ ===
# ==============================================================================
echo -e "\n--- STEP 1: Running the Vectorization Factory for embedder: ${EMBEDDER_TYPE_ENV} ---"
python scripts/world_2_neighbor_analysis/vectorizers/run_vectorization.py \
    --embedder_type "$EMBEDDER_TYPE_ENV" \
    --num_visits "$NUM_VISITS_ENV"

if [ $? -ne 0 ]; then
    echo "โ ERROR: Vectorization script failed. Halting pipeline."
    exit 1
fi
echo "โ Vectorization complete!"

# ==============================================================================
# === ๐ฅ STEP 2: LAUNCH VLLM & COMPUTE METRICS ๐ฅ ===
# ==============================================================================
echo -e "\n--- STEP 2: Igniting vLLM Server and Calculating All Metrics ---"
MODEL_PATH="/media/scratch/mferguson/models/unsloth-medgemma-27b-text-it-bnb-4bit"
vllm serve "$MODEL_PATH" --served-model-name medgemma &
VLLM_PID=$!
echo "โ vLLM Server starting with PID: $VLLM_PID"

echo "โณ Waiting for server to be ready..."
while ! curl -s http://localhost:8000/health; do
    sleep 5
done
echo "โ Server is ready!"

# --- Run the Metric Computation Behemoth! ---
echo "โ๏ธ  Computing all pairwise metrics with the ${EMBEDDER_TYPE_ENV} vectors..."
python compute_distance_metrics.py \
    --embedder_type "$EMBEDDER_TYPE_ENV" \
    --num_visits "$NUM_VISITS_ENV"

if [ $? -ne 0 ]; then
    echo "โ ERROR: Metric computation script failed. Shutting down and halting."
    kill $VLLM_PID
    wait $VLLM_PID 2>/dev/null
    exit 1
fi
echo "โ Metric computation complete!"

# ==============================================================================
# === ๐จ STEP 3: PLOT THE RESULTS! ๐จ ===
# ==============================================================================
echo -e "\n--- STEP 3: Unleashing the Correlation Matrix Megaplotter! ---"
python plot_metrics.py \
    --embedder_type "$EMBEDDER_TYPE_ENV" \
    --num_visits "$NUM_VISITS_ENV" \
    --sample_size "$SAMPLE_SIZE_ENV"

if [ $? -ne 0 ]; then
    echo "โ ERROR: Plotting script failed. Something is wrong with our art supplies!"
    # Still need to clean up!
fi
echo "โ Plotting complete!"


# ==============================================================================
# === ๐งน STEP 4: CLEANUP ๐งน ===
# ==============================================================================
echo -e "\n--- STEP 4: Shutting down the vLLM server ---"
kill $VLLM_PID
wait $VLLM_PID 2>/dev/null
echo "โ Server shut down."

echo -e "\n๐๐๐ FULL WORLD 2 PIPELINE FOR ${EMBEDDER_TYPE_ENV} FINISHED SUCCESSFULLY! ๐๐๐"